@model PalRSA.Core.DataAccess.CFISupportDocument

@{
    ViewBag.Title = "Data Recapture Supporting Document";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int id = Convert.ToInt32(this.ViewContext.RouteData.Values["id"]);
}
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"> <button type="button" class="btn"> <a href="@Url.Action("edit", new { id=id})"> <span> <i class="glyphicon glyphicon-user" style="color : #e98fa0;"></i> Biodata </span></a></button></li>
        <li class="breadcrumb-item"> <button type="button" class="btn"> <a href="@Url.Action("addemployment", new { id=id})"> <span> <i class="glyphicon glyphicon-list" style="color : #e98fa0;"></i> Employment Details </span></a></button></li>
        <li class="breadcrumb-item"> <button type="button" class="btn"> <a href="@Url.Action("AddNok", new { id=id})"> <span> <i class="glyphicon glyphicon-list-alt" style="color : #e98fa0;"></i> Next of Kin </span></a></button></li>
        <li class="breadcrumb-item"> <button type="button" class="btn"> <a href="@Url.Action("AddSalary", new { id=id})"> <span> <i class="glyphicon glyphicon-folder-close" style="color : #e98fa0;"></i> Salary Structure </span></a></button></li>
        <li class="breadcrumb-item"> <button type="button" class="btn"> <a href="@Url.Action("AddImages", new { id=id})"><span> <i class="glyphicon glyphicon-camera" style="color : #e98fa0;"></i> Upload Images</span></a></button></li>
        @*<li class="breadcrumb-item"><a href="@Url.Action("SupportDoc", new { id=id})"><strong>Support Documents</strong></a></li>*@
        <li class="breadcrumb-item"> <button type="button" class="btn"><a href="@Url.Action("SupportDoc", new { id=id})"><span> <i class="glyphicon glyphicon-lock" style="color : #e98fa0;"></i>Support Documents)</span></a></button></li>
    </ol>
</nav>
<h4>@ViewBag.Title</h4>
<hr />

@using (Html.BeginForm("SupportDoc", "Recapture", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(d => d.UserId)
    @Html.Hidden("UserId")

    <div class="form-horizontal">
        @*<h4>CFISupportDocument</h4>*@
        <hr />
        <div class="col-md-12">
            @Html.Partial("_Response")
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Pin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("Pin", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Pin, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                <label for="DocumentId" class="control-label col-md-2">Select document to upload</label>
                <div class="col-md-10">
                    @Html.DropDownList("DocumentId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DocumentId, "", new { @class = "text-danger" })
                </div>
            </div>*@


        <div class="form-group required">
            <label for="CFIPublicPrivateID" class="control-label col-md-2">Select Sector</label>
            <div class="col-md-10">
                @Html.DropDownList("CFIPublicPrivateID", null, "Select Sector", htmlAttributes: new { @class = "form-control" })     @*, data_is_deleted = "false"*@
            </div>
        </div>

        <div class="form-group required">
            <label for="DocumentId" class="control-label col-md-2">Select document to upload</label>
            <div class="col-md-10">
                @Html.DropDownList("DocumentId", null, "", htmlAttributes: new { @class = "form-control" })
            </div>
        </div>





        <div class="form-group">
            <label class="control-label col-md-2">Document/File </label>

            <div class="col-md-4">
                <input type="file" name="file" id="file" class="form-control" />
                <input type="text" name="fileName" id="fileName" class="hidden" />
                @* @Html.ValidationMessageFor(model => model.Name)*@
            </div>
            <div class="col-md-1"><input type="submit" value="Upload" name="submit" id="submit" class="btn" /></div>
            <div class="col-md-offset-1"></div>
            <div class="col-md-1">
                @*<input type="submit" value="Complete" id="finish" name="submit" class="btn btn-primary" />*@
            </div>
        </div>

    </div>



    <div>
        <h3>Uploaded document(s)</h3>
        <table class="table">
            <tr><td>Document Tile</td><td>Document</td></tr>
            @{

                //  int id = Convert.ToInt32(this.ViewContext.RouteData.Values["id"]);
                PalRSA.Core.DataAccess.PALSiteDBEntities db = new PalRSA.Core.DataAccess.PALSiteDBEntities();
                var docs = db.CFISupportDocuments.Include("CFIDocument").Where(x => x.UserId == id);
                //var docs = db.CFISupportDocuments.Where(x => x.UserId == id).ToList();
                foreach (var doc in docs)
                {
                    <tr>
                        <td>@doc.CFIDocument.Name</td>
                        <td>
                            <a href="@Url.Action("ShowSupportFile",new { id=doc.SupportDocId })">
                                &nbsp;
                                <i class="fa fa-paperclip fa-3x" aria-hidden="true"></i>@doc.CFIDocument.Name &nbsp;
                                <img id="signature" width="100" height="100" src="@Url.Action("ShowSupportFile",new { id=doc.SupportDocId })" alt="@doc.CFIDocument.Name" title="@doc.CFIDocument.Name" />
                            </a> &nsub;
                        </td>
                        <td>@Html.ActionLink("Delete", "DeleteSupportDoc", new { id = doc.SupportDocId }, new { @class = "btn btn-warning", @style = "color:white" })</td>
                        @*<td><a href="javascript:;" onclick="DeleteImage(@doc.SupportDocId);"><span>Remove Image</span></a></td>*@
                    </tr>
                    @*<embed src="@Url.Content("~/uploads/"+@doc.FilePath)" width="80px" height="210px">*@

                }
            }
        </table>
    </div>
    @*--------*@
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" id="finish" name="submit" class="btn btn-primary" />
                    </div>
                </div>
                }


@section scripts{
    <script>
        $(document).ready(function () {
            //  $('#DocumentId').empty();

            window.onload = function () {
                var selItem = sessionStorage.getItem("SelItem");
                $('#CFIPublicPrivateID').val(selItem);
            }
            $('#CFIPublicPrivateID').change(function () {
                var selVal = $(this).val();
                sessionStorage.setItem("SelItem", selVal);
            });

            var jqxhr = $.get("/Recapture/GetECRSDocument?CFIPublicPrivateID=" + selected, function (response, status, xhr) {
                $("#DocumentId").html(response);

            })

        });

        //  enableButtons();
        $('#CFIPublicPrivateID').change(function () {

            var selected = $("#CFIPublicPrivateID").find(':selected').val();

            $("#DocumentId").html("<option value='Loading...'>Loading... </option>");
            if (selected == "") {
                $("#DocumentId").html("<option value='Please select document'>Please select document</option>");
            }

            var jqxhr = $.get("/Recapture/GetECRSDocument?CFIPublicPrivateID=" + selected, function (response, status, xhr) {
                $("#DocumentId").html(response);

            }).fail(function (jqxhr, textStatus, error) {
                var err = textStatus + ", " + error;
                alert("Request Failed: " + err);
            });

        });

        $(function () {
            $('.datePicker').datepicker({
                defaultViewDate: null,
                dateFormat: 'dd/mm/yyyy',
                changeMonth: true,
                changeYear: true,
                yearRange: '-100:+100',
                buttonImage: "../../images/calender-icon.png",
                showOn: "both",
                buttonImageOnly: true,
                autoclose: true,
                buttonImageText: "Calendar",
                format: 'dd/mm/yyyy',
                todayHighlight: true

            }).on('changeDate', function (selected) {
                if (callBack != undefined) {
                    callBack(this, selected);
                }
            });

        });

        $('.datePicker2').datepicker({
            defaultViewDate: null,
            dateFormat: 'dd/M/yy',
            changeMonth: true,
            changeYear: true,
            //yearRange: '-120:+20',
            yearRange: "-100:+0",
            buttonImage: "../../images/calender-icon.png",
            showOn: "both",
            buttonImageOnly: true,
            autoclose: true,
            buttonImageText: "Calendar",
            format: 'dd/M/yy',
            todayHighlight: true

        })

    </script>

}